// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Form Components: RenderInput renders correctly 1`] = `
<RenderInput
  handleBlur={[Function]}
  handleChange={[Function]}
  handleFocus={[Function]}
  id="email"
  label="Email"
  meta={
    Object {
      "asyncValidating": false,
      "error": null,
      "touched": false,
    }
  }
  name="email"
  placeholder="jane"
  required={true}
  type="email"
  value=""
>
  <FormGroup
    tag="div"
  >
    <div
      className="form-group"
    >
      <Label
        className="col-form-label"
        for="email"
        tag="label"
        widths={
          Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ]
        }
      >
        <label
          className="col-form-label  form-control-label"
          htmlFor="email"
        >
          Email
          <span
            className="text-danger"
          >
            *
          </span>
        </label>
      </Label>
      <Input
        className=""
        id="email"
        name="email"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder="jane"
        tag="p"
        type="email"
        value=""
      >
        <input
          className="form-control"
          id="email"
          name="email"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="jane"
          type="email"
          value=""
        />
      </Input>
    </div>
  </FormGroup>
</RenderInput>
`;

exports[`Form Components: RenderInput shows 'Checking' when async validating 1`] = `
<RenderInput
  handleBlur={[Function]}
  handleChange={[Function]}
  handleFocus={[Function]}
  id="email"
  label="Email"
  meta={
    Object {
      "asyncValidating": true,
      "touched": true,
    }
  }
  name="email"
  placeholder="jane"
  required={true}
  type="email"
  value=""
>
  <FormGroup
    tag="div"
  >
    <div
      className="form-group"
    >
      <Label
        className="col-form-label"
        for="email"
        tag="label"
        widths={
          Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ]
        }
      >
        <label
          className="col-form-label  form-control-label"
          htmlFor="email"
        >
          Email
          <span
            className="text-danger"
          >
            *
          </span>
        </label>
      </Label>
      <Input
        className="is-valid"
        id="email"
        name="email"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder="jane"
        tag="p"
        type="email"
        value=""
      >
        <input
          className="is-valid form-control"
          id="email"
          name="email"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="jane"
          type="email"
          value=""
        />
      </Input>
      <small
        className="form-text"
      >
        Checking...
      </small>
    </div>
  </FormGroup>
</RenderInput>
`;

exports[`Form Components: RenderInput shows error when found 1`] = `
<RenderInput
  handleBlur={[Function]}
  handleChange={[Function]}
  handleFocus={[Function]}
  id="email"
  label="Email"
  meta={
    Object {
      "asyncValidating": false,
      "error": "This is an error",
      "touched": true,
    }
  }
  name="email"
  placeholder="jane"
  required={true}
  type="email"
  value="jane@smith.me"
>
  <FormGroup
    tag="div"
  >
    <div
      className="form-group"
    >
      <Label
        className="col-form-label"
        for="email"
        tag="label"
        widths={
          Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ]
        }
      >
        <label
          className="col-form-label  form-control-label"
          htmlFor="email"
        >
          Email
          <span
            className="text-danger"
          >
            *
          </span>
        </label>
      </Label>
      <Input
        className="is-invalid"
        id="email"
        name="email"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder="jane"
        tag="p"
        type="email"
        value="jane@smith.me"
      >
        <input
          className="is-invalid form-control"
          id="email"
          name="email"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="jane"
          type="email"
          value="jane@smith.me"
        />
      </Input>
      <div
        className="invalid-feedback"
      >
        This is an error
      </div>
    </div>
  </FormGroup>
</RenderInput>
`;
